--------------------------------------------------------------
                Quaternion toolbox for Matlab
                http://qtfm.sourceforge.net/
       Mailing list: qtfm-announce@lists.sourceforge.net
--------------------------------------------------------------
Copyright (c) 2005-2017 Stephen J. Sangwine & Nicolas Le Bihan
Email: sangwine@users.sourceforge.net
       nicolas.le-bihan@gipsa-lab.inpg.fr
--------------------------------------------------------------

                     Release Notes

Version 2.6  1 August 2017

Fixed a bug in the quaternion plus function that caused addition of scalar
numerics to pure quaternion arrays to fail (e.g. randv(2) + 1 would yield a
result with 1 in the scalar part and a 2-by-2 array in the vector part).
The bug was probably introduced in the previous release by the need to deal
with singleton expansion (see below). The octonion code uses the quaternion
code to perform addition, so the fix also ensures that octonion results are
correct.

Fixed a bug in the ishermitian function whereby it was not checked that the
scalar part was a symmetric matrix. The default tolerance was also relaxed.

The function orthogonal which previously accepted only scalar arguments, is
now vectorised.

The scatter4p3 function now has output parameters which provide access to
the subplot axes, and therefore allow user adjustments to labels, scaling
etc.

Version 2.5  28 September 2016

Matlab release R2016b has introduced implicit singleton expansion, and this
broke the existing QTFM support for the cov (covariance) function. To fix
this, QTFM basic operations have been modified to permit implicit singleton
expansion (this simply required the restrictions on parameter sizes to be
relaxed). As a result, the QTFM basic operations +, -, .*, .^, ./ and .\ as
well as the relational operators, now perform implicit singleton expansion
just like the corresponding Matlab functions (this is achieved by the
underlying Matlab code - all that was needed was to relax the restrictions
on parameter sizes). CAUTION: A consequence of this change is that some
operations that previously raised an error will now produce a result.
Adding a row vector of quaternions to a column vector of quaternions, for
example, will now produce a matrix by singleton expansion, even when the
two vectors have different lengths. The behaviour of QTFM is consistent
with Matlab, but this may not be mathematically meaningful.

A new function factorq has been introduced for the factorization of a
quaternion into orthogonal factors. A parameter specifies a direction in
3-space which defines which of an infinite number of possible factors are
returned.

The Matlab function sylvester, introduced with Matlab R2014b, which
computes the solution X to Sylvester's equation AX * XB = C, has been
overloaded for quaternions, using an adjoint representation of the
quaternion parameters passed to the Matlab function.

A new function, homogeneous, converts between pure quaternions representing
points in 3-space to full quaternions representing the same points in
homogeneous coordinates, and vice versa.

The Help information has been restyled and the previous alphabetical and
categorised linear lists of functions made into tables for easier browsing.
These improvements were done by Ryan Stuart as part of a project to create
initial documentation for the Clifford Toolbox for Matlab, working as a
Frontrunner placement student on placement number FR1516207 funded by the
University of Essex from June to August 2016.

As noted in the release notes for version 2.4, the functions q2 and q3 have
now been removed, and q1 redefined to return 1 + 0i + 0j + 0k.

Version 2.4  15 June 2016

This version of QTFM requires a minimum Matlab version of 8.6 (R2015b). The
reason for this is that a new function numArgumentsFromSubscript has been
provided in Matlab, and may be overloaded for user-defined types such as
quaternion and octonion. This permits a resolution of a long-standing
issue with the numel function, which has now been modified to return the
number of elements in an array (as would be expected). The new function
numArgumentsFromSubscript has been overloaded (inside the constructor
functions) to provide the functionality needed to support subsref and
subsasgn.

The slerp function now permits extrapolation outside the arc defined by the
first two parameters by permitting the third parameter to be less than zero
or greater than one.

A new plotting function scatter4p3 plots a full quaternion scatter plot as
four projections into 3-space (rather than 6 projections onto planes as
done by the existing scatter4 function). The labelling of the axes in
scatter4 has been changed to {W, X, Y, Z} rather than {1, I, J, K} for
better legibility (and the new function uses the same labelling).

A new file qftm_version provides a check on the latest version available
at Sourceforge (provided an Internet connection is available). The test
code calls this function, and a warning is output if a more recent version
is available.

The quaternion and octonion classes now permit the value of variables to be
seen in the variable editor (but not changed there). [The octonion case
needs some more work as the internal quaternions cannot be seen.]

Three functions called q1, q2 and q3 which returned the quaternion values
i, j and k are now obsolete. If called they return an error message. They
should be replaced in any code that uses them with qi, qj or qk respectively.
The reason is to make possible in the next release a new q1 function that
will return quaternion 1 for consistency with qi, qj and qk. (Of course
onesq with no parameters already does this, but it is not as obvious as q1.)
This release includes the corresponding octonion function o1, which returns
an octonion with value unity.

The function empty has been implemented so that it is now possible to write
quaternion.empty or quaternion.empty(0,1) to create an empty quaternion array
(with double components) and similarly for octonions.

Version 2.3  27 January 2016

A new function spherical_mean has been added. This computes the geodesic
or intrinsic mean of a vector of full or pure quaternions. Test code has
been added for this new function, which also adds new tests on slerp and
the two functions randf and randvmf which are used to test the spherical
mean. The code for randf has been partially vectorised, making it much
faster, but resulting in a change in the values returned (due to different
order calls on rand and randn).

Two new convolution functions have been added, with wrap around. These are
called convw and convw2. A new function called mustard has been added to
implement the so-called 'Mustard' convolution which corresponds to a point-
wise product in the Fourier domain (see references included in the code and
helpfiles).

The function bsxfun has been totally rewritten. The previous coding was a
crude version to support the matlab functions std, var and cov. The new
version is coded in a much more general way and makes it possible to use
further Matlab functions such as kron, that depend on bsxfun, with
quaternion inputs. The implementation is perhaps not the fastest method
possible, but information about bsxfun is hard to find and the method used
has had to be devised from scratch. Test code for bsxfun has been added. An
octonion version of the function is also provided (trivially different).

Various Matlab functions have worked with quaternion arrays for some time,
as listed in the help documentation for QTFM, but there has not been any
test code in QTFM to verify the working of these functions and provide a
check with each Matlab release that the functions still work. This has now
been rectified by adding test_matfuns to the list of test files. Test code
has also been added for the octonion case, except for pinv and rank which
do not work with octonion arrays (because the SVD is not implemented for
octonions [yet]).

Some fixes have been done to subsasgn (quaternion and octonion) to support
empty arrays for the b parameter, so that the behaviour of QTFM matches the
behaviour of Matlab on numeric arrays. This is important because it makes
possible the execution of Matlab functions that use empty assignment to
delete array elements, on quaternion and octonion arrays. An example is the
pseudoinverse (pinv) which now works on quaternion arrays (but not octonion
because the SVD is not yet implemented).

A new function qtfm_helpdb is provided for building a searchable database
from the toolbox helpfiles. After running this function, searches in the
help window will return results from the toolbox documentation, where
appropriate.

Version 2.2  30 September 2015

Matlab R2015b (Matlab 8.6) introduced a new compute engine which exposed a
latent bug in prod (implicit indexing was used inside a class method). This
broke the test code. A fix has been applied using subsref/subsasgn.

The times and mtimes functions have been amended to support multiplication
of quaternions and logicals (there is an implicit conversion from logical
to a numeric type, as happens when you multiply standard Matlab numeric
types with logicals).

New octonion functions: isinf, isnan.

The existing functions commutator and associator have been replaced with
class methods, the former for both quaternions and octonions, the latter
for octonions only. All three functions now use the .* multiplication, and
all three implement two versions of their respective function, selected by
a string option. The default is as before, for reasonable compatibility,
assuming that .* is what is wanted. The reason for implementing these
functions differently is the realisation that an alternative definition
(the 'prod' option) is possible. The old functions should be deleted if you
are upgrading from an earlier release (they will be found in the root QTFM
folder).

Test code has been added for various octonion identities.

Version 2.1  2 May 2014

The Matlab functions plot3 and quiver3 have been overloaded for quaternions.

Two new functions implement general orthogonal plane and hyperplane
decompositions. They are called opd and ohd. They implement a
decomposition of the form (q +/- a q b)./2 where a and b are scalars.

Two new functions fftflip and fftflip2 implement discrete time/frequency
reversal of arrays containing signals or images.

The octonion vector_product function has been re-written, supported
by a study of the references cited within the code.

The octonion functions angle/axis/exp/sqrt have been implemented.

Some initial steps have been taken to enable quaternions to have
logical components as well as numeric. This is a minor change in
functionality, and of course, as soon as you multiply or add quaternions
with such components, Matlab will convert them to double, just as it does
with logical arrays.

There are minor fixes in many functions and files.

Version 2.0  2 April 2013

This major new release adds an additional class to the toolbox, for
computing with octonions, making maximum use of existing quaternion
functionality to implement the new octonion functions. The octonion
code operates using the Cayley-Dickson construction, that is the
internal representation of an octonion is an ordered pair of
quaternions. For the moment, the octonion class should be regarded
as experimental, and the functionality is limited compared to the
quaternion class. We have not listed all the new octonion functions
here, because most are overloadings of existing Matlab or quaternion
functions. However, we have implemented the LU decomposition, and left
and right matrix inverses that will work for small arrays (linv and rinv).
We have also added two new functions called associator and commutator which
take arbitrary argument types, but make most sense with quaternions and
octonions. Functions for creating random and zero octonions follow the
naming conventions used for the corresponding quaternion functions (e.g.
rando corresponds to randq). Although some other functions will work for
octonion matrices, their results may not be correct. Test code for the
octonion functions is somewhat limited at present, but basic functionality
is tested.

CAUTION: Since the octonion algebra is not associative, multiplication of
octonion matrices is not associative. The documentation will be updated
gradually to add the octonion functionality, but it is likely that coverage
will be sketchy for some time, since many existing quaternion documentation
files need to be updated. We do not plan to change the name of the toolbox,
since it remains first and foremost a quaternion toolbox. The octonions are
a bonus.

A new function, part, for octonions and quaternions provides indexed access
to the components. For the quaternions this provides similar functionality
to the existing s/scalar/x/y/z functions, but for the octonions it provides
the only means to access the individual components of the vector part - we
did not want to create seven named functions corresponding to the existing
quaternion functions x/y/z.

A new function scatter4 provides a way to visualise distribution
of quaternions in four dimensions using six orthographic projections.
scatter3 and image now support an output parameter (a graphics handle)
just as the corresponding Matlab functions.

A new function, frenet, computes the Frenet-Serret frames of a quaternion
sequence or curve.

The private function isoquaternion has been altered to fix a problem
with the sqrt function in which sqrt(quaternion(-1)) returned zero
rather than the correct result (0+1i) + 0 * I + 0 * J + 0 * K
(the complex root of -1). Since isoquaternion is used in many other
functions, this may also have an impact elsewhere, but this remains
to be studied.

The checking of Matlab version numbers in the test code has been updated.
Note that with Matlab version 8 the Start menu has been removed. The QTFM
documentation is accessible from the Documentation window, under Supplemental
Software. The other functionality of the Start button seems to have
vanished, but the test code can be run by typing qtfm_test in the command
window.

(For earlier release notes see version 1.9, or look at earlier versions of
this file using the Sourceforge CVS repository browser.)

$Id: Release_notes.txt,v 1.62 2017/07/31 12:15:17 sangwine Exp $
